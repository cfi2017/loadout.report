/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodComponentsPeriodKiosksPeriodDestinyKioskItem {
    /// The index of the item in the related DestinyVendorDefintion's itemList property, representing the sale.
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<i32>,
    /// If true, the user can not only see the item, but they can acquire it. It is possible that a user can see a kiosk item and not be able to acquire it.
    #[serde(rename = "canAcquire", skip_serializing_if = "Option::is_none")]
    pub can_acquire: Option<bool>,
    /// Indexes into failureStrings for the Vendor, indicating the reasons why it failed if any.
    #[serde(rename = "failureIndexes", skip_serializing_if = "Option::is_none")]
    pub failure_indexes: Option<Vec<i32>>,
    #[serde(rename = "flavorObjective", skip_serializing_if = "Option::is_none")]
    pub flavor_objective: Option<Box<crate::models::DestinyComponentsKiosksDestinyKioskItemFlavorObjective>>,
}

impl DestinyPeriodComponentsPeriodKiosksPeriodDestinyKioskItem {
    pub fn new() -> DestinyPeriodComponentsPeriodKiosksPeriodDestinyKioskItem {
        DestinyPeriodComponentsPeriodKiosksPeriodDestinyKioskItem {
            index: None,
            can_acquire: None,
            failure_indexes: None,
            flavor_objective: None,
        }
    }
}


