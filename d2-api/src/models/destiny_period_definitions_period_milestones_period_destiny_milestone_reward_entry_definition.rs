/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneRewardEntryDefinition : The definition of a specific reward, which may be contained in a category of rewards and that has optional information about how it is obtained.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneRewardEntryDefinition {
    /// The identifier for this reward entry. Runtime data will refer to reward entries by this hash. Only guaranteed unique within the specific Milestone.
    #[serde(rename = "rewardEntryHash", skip_serializing_if = "Option::is_none")]
    pub reward_entry_hash: Option<i32>,
    /// The string identifier, if you care about it. Only guaranteed unique within the specific Milestone.
    #[serde(rename = "rewardEntryIdentifier", skip_serializing_if = "Option::is_none")]
    pub reward_entry_identifier: Option<String>,
    /// The items you will get as rewards, and how much of it you'll get.
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<crate::models::DestinyPeriodDestinyItemQuantity>>,
    /// If this reward is redeemed at a Vendor, this is the hash of the Vendor to go to in order to redeem the reward. Use this hash to look up the DestinyVendorDefinition.
    #[serde(rename = "vendorHash", skip_serializing_if = "Option::is_none")]
    pub vendor_hash: Option<i32>,
    #[serde(rename = "displayProperties", skip_serializing_if = "Option::is_none")]
    pub display_properties: Option<Box<crate::models::DestinyDefinitionsMilestonesDestinyMilestoneRewardEntryDefinitionDisplayProperties>>,
    /// If you want to follow BNet's ordering of these rewards, use this number within a given category to order the rewards. Yeah, I know. I feel dirty too.
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<i32>,
}

impl DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneRewardEntryDefinition {
    /// The definition of a specific reward, which may be contained in a category of rewards and that has optional information about how it is obtained.
    pub fn new() -> DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneRewardEntryDefinition {
        DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneRewardEntryDefinition {
            reward_entry_hash: None,
            reward_entry_identifier: None,
            items: None,
            vendor_hash: None,
            display_properties: None,
            order: None,
        }
    }
}


