/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// UserPeriodUserMembership : Very basic info about a user as returned by the Account server.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserPeriodUserMembership {
    /// Type of the membership. Not necessarily the native type.
    #[serde(rename = "membershipType", skip_serializing_if = "Option::is_none")]
    pub membership_type: Option<i32>,
    /// Membership ID as they user is known in the Accounts service
    #[serde(rename = "membershipId", skip_serializing_if = "Option::is_none")]
    pub membership_id: Option<i64>,
    /// Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// The bungie global display name, if set.
    #[serde(rename = "bungieGlobalDisplayName", skip_serializing_if = "Option::is_none")]
    pub bungie_global_display_name: Option<String>,
    /// The bungie global display name code, if set.
    #[serde(rename = "bungieGlobalDisplayNameCode", skip_serializing_if = "Option::is_none")]
    pub bungie_global_display_name_code: Option<i32>,
}

impl UserPeriodUserMembership {
    /// Very basic info about a user as returned by the Account server.
    pub fn new() -> UserPeriodUserMembership {
        UserPeriodUserMembership {
            membership_type: None,
            membership_id: None,
            display_name: None,
            bungie_global_display_name: None,
            bungie_global_display_name_code: None,
        }
    }
}


