/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// TrendingTrendingEntryDestinyRitualMilestoneDetails : A destiny event does not necessarily have a related Milestone, but if it does the details will be returned here.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TrendingTrendingEntryDestinyRitualMilestoneDetails {
    /// The hash identifier for the milestone. Use it to look up the DestinyMilestoneDefinition for static data about the Milestone.
    #[serde(rename = "milestoneHash", skip_serializing_if = "Option::is_none")]
    pub milestone_hash: Option<i32>,
    /// A milestone not need have even a single quest, but if there are active quests they will be returned here.
    #[serde(rename = "availableQuests", skip_serializing_if = "Option::is_none")]
    pub available_quests: Option<Vec<crate::models::DestinyPeriodMilestonesPeriodDestinyPublicMilestoneQuest>>,
    #[serde(rename = "activities", skip_serializing_if = "Option::is_none")]
    pub activities: Option<Vec<crate::models::DestinyPeriodMilestonesPeriodDestinyPublicMilestoneChallengeActivity>>,
    /// Sometimes milestones - or activities active in milestones - will have relevant vendors. These are the vendors that are currently relevant.  Deprecated, already, for the sake of the new \"vendors\" property that has more data. What was I thinking.
    #[serde(rename = "vendorHashes", skip_serializing_if = "Option::is_none")]
    pub vendor_hashes: Option<Vec<i32>>,
    /// This is why we can't have nice things. This is the ordered list of vendors to be shown that relate to this milestone, potentially along with other interesting data.
    #[serde(rename = "vendors", skip_serializing_if = "Option::is_none")]
    pub vendors: Option<Vec<crate::models::DestinyPeriodMilestonesPeriodDestinyPublicMilestoneVendor>>,
    /// If known, this is the date when the Milestone started/became active.
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// If known, this is the date when the Milestone will expire/recycle/end.
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    /// Used for ordering milestones in a display to match how we order them in BNet. May pull from static data, or possibly in the future from dynamic information.
    #[serde(rename = "order", skip_serializing_if = "Option::is_none")]
    pub order: Option<i32>,
}

impl TrendingTrendingEntryDestinyRitualMilestoneDetails {
    /// A destiny event does not necessarily have a related Milestone, but if it does the details will be returned here.
    pub fn new() -> TrendingTrendingEntryDestinyRitualMilestoneDetails {
        TrendingTrendingEntryDestinyRitualMilestoneDetails {
            milestone_hash: None,
            available_quests: None,
            activities: None,
            vendor_hashes: None,
            vendors: None,
            start_date: None,
            end_date: None,
            order: None,
        }
    }
}


