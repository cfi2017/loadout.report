/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyDefinitionsDestinyInventoryItemDefinitionSourceData : If this item has a known source, this block will be non-null and populated with source information. Unfortunately, at this time we are not generating sources: that is some aggressively manual work which we didn't have time for, and I'm hoping to get back to at some point in the future.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyInventoryItemDefinitionSourceData {
    /// The list of hash identifiers for Reward Sources that hint where the item can be found (DestinyRewardSourceDefinition).
    #[serde(rename = "sourceHashes", skip_serializing_if = "Option::is_none")]
    pub source_hashes: Option<Vec<i32>>,
    /// A collection of details about the stats that were computed for the ways we found that the item could be spawned.
    #[serde(rename = "sources", skip_serializing_if = "Option::is_none")]
    pub sources: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodSourcesPeriodDestinyItemSourceDefinition>>,
    /// If we found that this item is exclusive to a specific platform, this will be set to the BungieMembershipType enumeration that matches that platform.
    #[serde(rename = "exclusive", skip_serializing_if = "Option::is_none")]
    pub exclusive: Option<i32>,
    /// A denormalized reference back to vendors that potentially sell this item.
    #[serde(rename = "vendorSources", skip_serializing_if = "Option::is_none")]
    pub vendor_sources: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodDestinyItemVendorSourceReference>>,
}

impl DestinyDefinitionsDestinyInventoryItemDefinitionSourceData {
    /// If this item has a known source, this block will be non-null and populated with source information. Unfortunately, at this time we are not generating sources: that is some aggressively manual work which we didn't have time for, and I'm hoping to get back to at some point in the future.
    pub fn new() -> DestinyDefinitionsDestinyInventoryItemDefinitionSourceData {
        DestinyDefinitionsDestinyInventoryItemDefinitionSourceData {
            source_hashes: None,
            sources: None,
            exclusive: None,
            vendor_sources: None,
        }
    }
}


