/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TrendingPeriodTrendingDetail {
    #[serde(rename = "identifier", skip_serializing_if = "Option::is_none")]
    pub identifier: Option<String>,
    #[serde(rename = "entityType", skip_serializing_if = "Option::is_none")]
    pub entity_type: Option<i32>,
    #[serde(rename = "news", skip_serializing_if = "Option::is_none")]
    pub news: Option<Box<crate::models::TrendingPeriodTrendingEntryNews>>,
    #[serde(rename = "support", skip_serializing_if = "Option::is_none")]
    pub support: Option<Box<crate::models::TrendingPeriodTrendingEntrySupportArticle>>,
    #[serde(rename = "destinyItem", skip_serializing_if = "Option::is_none")]
    pub destiny_item: Option<Box<crate::models::TrendingPeriodTrendingEntryDestinyItem>>,
    #[serde(rename = "destinyActivity", skip_serializing_if = "Option::is_none")]
    pub destiny_activity: Option<Box<crate::models::TrendingPeriodTrendingEntryDestinyActivity>>,
    #[serde(rename = "destinyRitual", skip_serializing_if = "Option::is_none")]
    pub destiny_ritual: Option<Box<crate::models::TrendingPeriodTrendingEntryDestinyRitual>>,
    #[serde(rename = "creation", skip_serializing_if = "Option::is_none")]
    pub creation: Option<Box<crate::models::TrendingPeriodTrendingEntryCommunityCreation>>,
}

impl TrendingPeriodTrendingDetail {
    pub fn new() -> TrendingPeriodTrendingDetail {
        TrendingPeriodTrendingDetail {
            identifier: None,
            entity_type: None,
            news: None,
            support: None,
            destiny_item: None,
            destiny_activity: None,
            destiny_ritual: None,
            creation: None,
        }
    }
}


