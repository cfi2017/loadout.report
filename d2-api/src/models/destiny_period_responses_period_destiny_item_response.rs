/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodResponsesPeriodDestinyItemResponse : The response object for retrieving an individual instanced item. None of these components are relevant for an item that doesn't have an \"itemInstanceId\": for those, get your information from the DestinyInventoryDefinition.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodResponsesPeriodDestinyItemResponse {
    /// If the item is on a character, this will return the ID of the character that is holding the item.
    #[serde(rename = "characterId", skip_serializing_if = "Option::is_none")]
    pub character_id: Option<i64>,
    #[serde(rename = "item", skip_serializing_if = "Option::is_none")]
    pub item: Option<Box<crate::models::DestinyResponsesDestinyItemResponseItem>>,
    #[serde(rename = "instance", skip_serializing_if = "Option::is_none")]
    pub instance: Option<Box<crate::models::DestinyResponsesDestinyItemResponseInstance>>,
    #[serde(rename = "objectives", skip_serializing_if = "Option::is_none")]
    pub objectives: Option<Box<crate::models::DestinyResponsesDestinyItemResponseObjectives>>,
    #[serde(rename = "perks", skip_serializing_if = "Option::is_none")]
    pub perks: Option<Box<crate::models::DestinyResponsesDestinyItemResponsePerks>>,
    #[serde(rename = "renderData", skip_serializing_if = "Option::is_none")]
    pub render_data: Option<Box<crate::models::DestinyResponsesDestinyItemResponseRenderData>>,
    #[serde(rename = "stats", skip_serializing_if = "Option::is_none")]
    pub stats: Option<Box<crate::models::DestinyResponsesDestinyItemResponseStats>>,
    #[serde(rename = "talentGrid", skip_serializing_if = "Option::is_none")]
    pub talent_grid: Option<Box<crate::models::DestinyResponsesDestinyItemResponseTalentGrid>>,
    #[serde(rename = "sockets", skip_serializing_if = "Option::is_none")]
    pub sockets: Option<Box<crate::models::DestinyResponsesDestinyItemResponseSockets>>,
    #[serde(rename = "reusablePlugs", skip_serializing_if = "Option::is_none")]
    pub reusable_plugs: Option<Box<crate::models::DestinyResponsesDestinyItemResponseReusablePlugs>>,
    #[serde(rename = "plugObjectives", skip_serializing_if = "Option::is_none")]
    pub plug_objectives: Option<Box<crate::models::DestinyResponsesDestinyItemResponsePlugObjectives>>,
}

impl DestinyPeriodResponsesPeriodDestinyItemResponse {
    /// The response object for retrieving an individual instanced item. None of these components are relevant for an item that doesn't have an \"itemInstanceId\": for those, get your information from the DestinyInventoryDefinition.
    pub fn new() -> DestinyPeriodResponsesPeriodDestinyItemResponse {
        DestinyPeriodResponsesPeriodDestinyItemResponse {
            character_id: None,
            item: None,
            instance: None,
            objectives: None,
            perks: None,
            render_data: None,
            stats: None,
            talent_grid: None,
            sockets: None,
            reusable_plugs: None,
            plug_objectives: None,
        }
    }
}


