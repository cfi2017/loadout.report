/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodTraitsPeriodDestinyTraitCategoryDefinition {
    #[serde(rename = "traitCategoryId", skip_serializing_if = "Option::is_none")]
    pub trait_category_id: Option<String>,
    #[serde(rename = "traitHashes", skip_serializing_if = "Option::is_none")]
    pub trait_hashes: Option<Vec<i32>>,
    #[serde(rename = "traitIds", skip_serializing_if = "Option::is_none")]
    pub trait_ids: Option<Vec<String>>,
    /// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<i32>,
    /// The index of the entity as it was found in the investment tables.
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<i32>,
    /// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
    #[serde(rename = "redacted", skip_serializing_if = "Option::is_none")]
    pub redacted: Option<bool>,
}

impl DestinyPeriodDefinitionsPeriodTraitsPeriodDestinyTraitCategoryDefinition {
    pub fn new() -> DestinyPeriodDefinitionsPeriodTraitsPeriodDestinyTraitCategoryDefinition {
        DestinyPeriodDefinitionsPeriodTraitsPeriodDestinyTraitCategoryDefinition {
            trait_category_id: None,
            trait_hashes: None,
            trait_ids: None,
            hash: None,
            index: None,
            redacted: None,
        }
    }
}


