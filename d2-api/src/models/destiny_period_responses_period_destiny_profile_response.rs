/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodResponsesPeriodDestinyProfileResponse : The response for GetDestinyProfile, with components for character and item-level data.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodResponsesPeriodDestinyProfileResponse {
    #[serde(rename = "vendorReceipts", skip_serializing_if = "Option::is_none")]
    pub vendor_receipts: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseVendorReceipts>>,
    #[serde(rename = "profileInventory", skip_serializing_if = "Option::is_none")]
    pub profile_inventory: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileInventory>>,
    #[serde(rename = "profileCurrencies", skip_serializing_if = "Option::is_none")]
    pub profile_currencies: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileCurrencies>>,
    #[serde(rename = "profile", skip_serializing_if = "Option::is_none")]
    pub profile: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfile>>,
    #[serde(rename = "platformSilver", skip_serializing_if = "Option::is_none")]
    pub platform_silver: Option<Box<crate::models::DestinyResponsesDestinyProfileResponsePlatformSilver>>,
    #[serde(rename = "profileKiosks", skip_serializing_if = "Option::is_none")]
    pub profile_kiosks: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileKiosks>>,
    #[serde(rename = "profilePlugSets", skip_serializing_if = "Option::is_none")]
    pub profile_plug_sets: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfilePlugSets>>,
    #[serde(rename = "profileProgression", skip_serializing_if = "Option::is_none")]
    pub profile_progression: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileProgression>>,
    #[serde(rename = "profilePresentationNodes", skip_serializing_if = "Option::is_none")]
    pub profile_presentation_nodes: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfilePresentationNodes>>,
    #[serde(rename = "profileRecords", skip_serializing_if = "Option::is_none")]
    pub profile_records: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileRecords>>,
    #[serde(rename = "profileCollectibles", skip_serializing_if = "Option::is_none")]
    pub profile_collectibles: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileCollectibles>>,
    #[serde(rename = "profileTransitoryData", skip_serializing_if = "Option::is_none")]
    pub profile_transitory_data: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileTransitoryData>>,
    #[serde(rename = "metrics", skip_serializing_if = "Option::is_none")]
    pub metrics: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseMetrics>>,
    #[serde(rename = "profileStringVariables", skip_serializing_if = "Option::is_none")]
    pub profile_string_variables: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseProfileStringVariables>>,
    #[serde(rename = "characters", skip_serializing_if = "Option::is_none")]
    pub characters: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacters>>,
    #[serde(rename = "characterInventories", skip_serializing_if = "Option::is_none")]
    pub character_inventories: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterInventories>>,
    #[serde(rename = "characterProgressions", skip_serializing_if = "Option::is_none")]
    pub character_progressions: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterProgressions>>,
    #[serde(rename = "characterRenderData", skip_serializing_if = "Option::is_none")]
    pub character_render_data: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterRenderData>>,
    #[serde(rename = "characterActivities", skip_serializing_if = "Option::is_none")]
    pub character_activities: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterActivities>>,
    #[serde(rename = "characterEquipment", skip_serializing_if = "Option::is_none")]
    pub character_equipment: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterEquipment>>,
    #[serde(rename = "characterKiosks", skip_serializing_if = "Option::is_none")]
    pub character_kiosks: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterKiosks>>,
    #[serde(rename = "characterPlugSets", skip_serializing_if = "Option::is_none")]
    pub character_plug_sets: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterPlugSets>>,
    /// Do you ever get the feeling that a system was designed *too* flexibly? That it can be used in so many different ways that you end up being unable to provide an easy to use abstraction for the mess that's happening under the surface?  Let's talk about character-specific data that might be related to items without instances. These two statements are totally unrelated, I promise.  At some point during D2, it was decided that items - such as Bounties - could be given to characters and *not* have instance data, but that *could* display and even use relevant state information on your account and character.  Up to now, any item that had meaningful dependencies on character or account state had to be instanced, and thus \"itemComponents\" was all that you needed: it was keyed by item's instance IDs and provided the stateful information you needed inside.  Unfortunately, we don't live in such a magical world anymore. This is information held on a per-character basis about non-instanced items that the characters have in their inventory - or that reference character-specific state information even if it's in Account-level inventory - and the values related to that item's state in relation to the given character.  To give a concrete example, look at a Moments of Triumph bounty. They exist in a character's inventory, and show/care about a character's progression toward completing the bounty. But the bounty itself is a non-instanced item, like a mod or a currency. This returns that data for the characters who have the bounty in their inventory.  I'm not crying, you're crying Okay we're both crying but it's going to be okay I promise Actually I shouldn't promise that, I don't know if it's going to be okay
    #[serde(rename = "characterUninstancedItemComponents", skip_serializing_if = "Option::is_none")]
    pub character_uninstanced_item_components: Option<::std::collections::HashMap<String, crate::models::DestinyBaseItemComponentSetOfuint32>>,
    #[serde(rename = "characterPresentationNodes", skip_serializing_if = "Option::is_none")]
    pub character_presentation_nodes: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterPresentationNodes>>,
    #[serde(rename = "characterRecords", skip_serializing_if = "Option::is_none")]
    pub character_records: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterRecords>>,
    #[serde(rename = "characterCollectibles", skip_serializing_if = "Option::is_none")]
    pub character_collectibles: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterCollectibles>>,
    #[serde(rename = "characterStringVariables", skip_serializing_if = "Option::is_none")]
    pub character_string_variables: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterStringVariables>>,
    #[serde(rename = "characterCraftables", skip_serializing_if = "Option::is_none")]
    pub character_craftables: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterCraftables>>,
    #[serde(rename = "itemComponents", skip_serializing_if = "Option::is_none")]
    pub item_components: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseItemComponents>>,
    #[serde(rename = "characterCurrencyLookups", skip_serializing_if = "Option::is_none")]
    pub character_currency_lookups: Option<Box<crate::models::DestinyResponsesDestinyProfileResponseCharacterCurrencyLookups>>,
}

impl DestinyPeriodResponsesPeriodDestinyProfileResponse {
    /// The response for GetDestinyProfile, with components for character and item-level data.
    pub fn new() -> DestinyPeriodResponsesPeriodDestinyProfileResponse {
        DestinyPeriodResponsesPeriodDestinyProfileResponse {
            vendor_receipts: None,
            profile_inventory: None,
            profile_currencies: None,
            profile: None,
            platform_silver: None,
            profile_kiosks: None,
            profile_plug_sets: None,
            profile_progression: None,
            profile_presentation_nodes: None,
            profile_records: None,
            profile_collectibles: None,
            profile_transitory_data: None,
            metrics: None,
            profile_string_variables: None,
            characters: None,
            character_inventories: None,
            character_progressions: None,
            character_render_data: None,
            character_activities: None,
            character_equipment: None,
            character_kiosks: None,
            character_plug_sets: None,
            character_uninstanced_item_components: None,
            character_presentation_nodes: None,
            character_records: None,
            character_collectibles: None,
            character_string_variables: None,
            character_craftables: None,
            item_components: None,
            character_currency_lookups: None,
        }
    }
}


