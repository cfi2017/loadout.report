/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeChildrenBlock : As/if presentation nodes begin to host more entities as children, these lists will be added to. One list property exists per type of entity that can be treated as a child of this presentation node, and each holds the identifier of the entity and any associated information needed to display the UI for that entity (if anything)



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeChildrenBlock {
    #[serde(rename = "presentationNodes", skip_serializing_if = "Option::is_none")]
    pub presentation_nodes: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeChildEntry>>,
    #[serde(rename = "collectibles", skip_serializing_if = "Option::is_none")]
    pub collectibles: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeCollectibleChildEntry>>,
    #[serde(rename = "records", skip_serializing_if = "Option::is_none")]
    pub records: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeRecordChildEntry>>,
    #[serde(rename = "metrics", skip_serializing_if = "Option::is_none")]
    pub metrics: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeMetricChildEntry>>,
    #[serde(rename = "craftables", skip_serializing_if = "Option::is_none")]
    pub craftables: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeCraftableChildEntry>>,
}

impl DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeChildrenBlock {
    /// As/if presentation nodes begin to host more entities as children, these lists will be added to. One list property exists per type of entity that can be treated as a child of this presentation node, and each holds the identifier of the entity and any associated information needed to display the UI for that entity (if anything)
    pub fn new() -> DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeChildrenBlock {
        DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationNodeChildrenBlock {
            presentation_nodes: None,
            collectibles: None,
            records: None,
            metrics: None,
            craftables: None,
        }
    }
}


