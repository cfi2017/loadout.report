/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ApplicationsPeriodApplication {
    /// Unique ID assigned to the application
    #[serde(rename = "applicationId", skip_serializing_if = "Option::is_none")]
    pub application_id: Option<i32>,
    /// Name of the application
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// URL used to pass the user's authorization code to the application
    #[serde(rename = "redirectUrl", skip_serializing_if = "Option::is_none")]
    pub redirect_url: Option<String>,
    /// Link to website for the application where a user can learn more about the app.
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    /// Permissions the application needs to work
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<i64>,
    /// Value of the Origin header sent in requests generated by this application.
    #[serde(rename = "origin", skip_serializing_if = "Option::is_none")]
    pub origin: Option<String>,
    /// Current status of the application.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<i32>,
    /// Date the application was first added to our database.
    #[serde(rename = "creationDate", skip_serializing_if = "Option::is_none")]
    pub creation_date: Option<String>,
    /// Date the application status last changed.
    #[serde(rename = "statusChanged", skip_serializing_if = "Option::is_none")]
    pub status_changed: Option<String>,
    /// Date the first time the application status entered the 'Public' status.
    #[serde(rename = "firstPublished", skip_serializing_if = "Option::is_none")]
    pub first_published: Option<String>,
    /// List of team members who manage this application on Bungie.net. Will always consist of at least the application owner.
    #[serde(rename = "team", skip_serializing_if = "Option::is_none")]
    pub team: Option<Vec<crate::models::ApplicationsPeriodApplicationDeveloper>>,
    /// An optional override for the Authorize view name.
    #[serde(rename = "overrideAuthorizeViewName", skip_serializing_if = "Option::is_none")]
    pub override_authorize_view_name: Option<String>,
}

impl ApplicationsPeriodApplication {
    pub fn new() -> ApplicationsPeriodApplication {
        ApplicationsPeriodApplication {
            application_id: None,
            name: None,
            redirect_url: None,
            link: None,
            scope: None,
            origin: None,
            status: None,
            creation_date: None,
            status_changed: None,
            first_published: None,
            team: None,
            override_authorize_view_name: None,
        }
    }
}


