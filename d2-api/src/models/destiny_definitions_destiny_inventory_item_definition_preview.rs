/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyDefinitionsDestinyInventoryItemDefinitionPreview : If this item can be Used or Acquired to gain other items (for instance, how Eververse Boxes can be consumed to get items from the box), this block will be non-null and will give summary information for the items that can be acquired.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyDefinitionsDestinyInventoryItemDefinitionPreview {
    /// A string that the game UI uses as a hint for which detail screen to show for the item. You, too, can leverage this for your own custom screen detail views. Note, however, that these are arbitrarily defined by designers: there's no guarantees of a fixed, known number of these - so fall back to something reasonable if you don't recognize it.
    #[serde(rename = "screenStyle", skip_serializing_if = "Option::is_none")]
    pub screen_style: Option<String>,
    /// If the preview data is derived from a fake \"Preview\" Vendor, this will be the hash identifier for the DestinyVendorDefinition of that fake vendor.
    #[serde(rename = "previewVendorHash", skip_serializing_if = "Option::is_none")]
    pub preview_vendor_hash: Option<i32>,
    /// If this item should show you Artifact information when you preview it, this is the hash identifier of the DestinyArtifactDefinition for the artifact whose data should be shown.
    #[serde(rename = "artifactHash", skip_serializing_if = "Option::is_none")]
    pub artifact_hash: Option<i32>,
    /// If the preview has an associated action (like \"Open\"), this will be the localized string for that action.
    #[serde(rename = "previewActionString", skip_serializing_if = "Option::is_none")]
    pub preview_action_string: Option<String>,
    /// This is a list of the items being previewed, categorized in the same way as they are in the preview UI.
    #[serde(rename = "derivedItemCategories", skip_serializing_if = "Option::is_none")]
    pub derived_item_categories: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodItemsPeriodDestinyDerivedItemCategoryDefinition>>,
}

impl DestinyDefinitionsDestinyInventoryItemDefinitionPreview {
    /// If this item can be Used or Acquired to gain other items (for instance, how Eververse Boxes can be consumed to get items from the box), this block will be non-null and will give summary information for the items that can be acquired.
    pub fn new() -> DestinyDefinitionsDestinyInventoryItemDefinitionPreview {
        DestinyDefinitionsDestinyInventoryItemDefinitionPreview {
            screen_style: None,
            preview_vendor_hash: None,
            artifact_hash: None,
            preview_action_string: None,
            derived_item_categories: None,
        }
    }
}


