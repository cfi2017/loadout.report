/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodVendorsPeriodDestinyVendorReceipt : If a character purchased an item that is refundable, a Vendor Receipt will be created on the user's Destiny Profile. These expire after a configurable period of time, but until then can be used to get refunds on items. BNet does not provide the ability to refund a purchase *yet*, but you know.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodVendorsPeriodDestinyVendorReceipt {
    /// The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.
    #[serde(rename = "currencyPaid", skip_serializing_if = "Option::is_none")]
    pub currency_paid: Option<Vec<crate::models::DestinyPeriodDestinyItemQuantity>>,
    #[serde(rename = "itemReceived", skip_serializing_if = "Option::is_none")]
    pub item_received: Option<Box<crate::models::DestinyVendorsDestinyVendorReceiptItemReceived>>,
    /// The unlock flag used to determine whether you still have the purchased item.
    #[serde(rename = "licenseUnlockHash", skip_serializing_if = "Option::is_none")]
    pub license_unlock_hash: Option<i32>,
    /// The ID of the character who made the purchase.
    #[serde(rename = "purchasedByCharacterId", skip_serializing_if = "Option::is_none")]
    pub purchased_by_character_id: Option<i64>,
    /// Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details.
    #[serde(rename = "refundPolicy", skip_serializing_if = "Option::is_none")]
    pub refund_policy: Option<i32>,
    /// The identifier of this receipt.
    #[serde(rename = "sequenceNumber", skip_serializing_if = "Option::is_none")]
    pub sequence_number: Option<i32>,
    /// The seconds since epoch at which this receipt is rendered invalid.
    #[serde(rename = "timeToExpiration", skip_serializing_if = "Option::is_none")]
    pub time_to_expiration: Option<i64>,
    /// The date at which this receipt is rendered invalid.
    #[serde(rename = "expiresOn", skip_serializing_if = "Option::is_none")]
    pub expires_on: Option<String>,
}

impl DestinyPeriodVendorsPeriodDestinyVendorReceipt {
    /// If a character purchased an item that is refundable, a Vendor Receipt will be created on the user's Destiny Profile. These expire after a configurable period of time, but until then can be used to get refunds on items. BNet does not provide the ability to refund a purchase *yet*, but you know.
    pub fn new() -> DestinyPeriodVendorsPeriodDestinyVendorReceipt {
        DestinyPeriodVendorsPeriodDestinyVendorReceipt {
            currency_paid: None,
            item_received: None,
            license_unlock_hash: None,
            purchased_by_character_id: None,
            refund_policy: None,
            sequence_number: None,
            time_to_expiration: None,
            expires_on: None,
        }
    }
}


