/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GlobalAlert {
    #[serde(rename = "AlertKey", skip_serializing_if = "Option::is_none")]
    pub alert_key: Option<String>,
    #[serde(rename = "AlertHtml", skip_serializing_if = "Option::is_none")]
    pub alert_html: Option<String>,
    #[serde(rename = "AlertTimestamp", skip_serializing_if = "Option::is_none")]
    pub alert_timestamp: Option<String>,
    #[serde(rename = "AlertLink", skip_serializing_if = "Option::is_none")]
    pub alert_link: Option<String>,
    #[serde(rename = "AlertLevel", skip_serializing_if = "Option::is_none")]
    pub alert_level: Option<i32>,
    #[serde(rename = "AlertType", skip_serializing_if = "Option::is_none")]
    pub alert_type: Option<i32>,
    #[serde(rename = "StreamInfo", skip_serializing_if = "Option::is_none")]
    pub stream_info: Option<Box<crate::models::StreamInfo>>,
}

impl GlobalAlert {
    pub fn new() -> GlobalAlert {
        GlobalAlert {
            alert_key: None,
            alert_html: None,
            alert_timestamp: None,
            alert_link: None,
            alert_level: None,
            alert_type: None,
            stream_info: None,
        }
    }
}


