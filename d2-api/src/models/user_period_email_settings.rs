/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// UserPeriodEmailSettings : The set of all email subscription/opt-in settings and definitions.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserPeriodEmailSettings {
    /// Keyed by the name identifier of the opt-in definition.
    #[serde(rename = "optInDefinitions", skip_serializing_if = "Option::is_none")]
    pub opt_in_definitions: Option<::std::collections::HashMap<String, crate::models::UserPeriodEmailOptInDefinition>>,
    /// Keyed by the name identifier of the Subscription definition.
    #[serde(rename = "subscriptionDefinitions", skip_serializing_if = "Option::is_none")]
    pub subscription_definitions: Option<::std::collections::HashMap<String, crate::models::UserPeriodEmailSubscriptionDefinition>>,
    /// Keyed by the name identifier of the View definition.
    #[serde(rename = "views", skip_serializing_if = "Option::is_none")]
    pub views: Option<::std::collections::HashMap<String, crate::models::UserPeriodEmailViewDefinition>>,
}

impl UserPeriodEmailSettings {
    /// The set of all email subscription/opt-in settings and definitions.
    pub fn new() -> UserPeriodEmailSettings {
        UserPeriodEmailSettings {
            opt_in_definitions: None,
            subscription_definitions: None,
            views: None,
        }
    }
}


