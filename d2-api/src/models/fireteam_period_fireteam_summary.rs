/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FireteamPeriodFireteamSummary {
    #[serde(rename = "fireteamId", skip_serializing_if = "Option::is_none")]
    pub fireteam_id: Option<i64>,
    #[serde(rename = "groupId", skip_serializing_if = "Option::is_none")]
    pub group_id: Option<i64>,
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<i32>,
    #[serde(rename = "activityType", skip_serializing_if = "Option::is_none")]
    pub activity_type: Option<i32>,
    #[serde(rename = "isImmediate", skip_serializing_if = "Option::is_none")]
    pub is_immediate: Option<bool>,
    #[serde(rename = "scheduledTime", skip_serializing_if = "Option::is_none")]
    pub scheduled_time: Option<String>,
    #[serde(rename = "ownerMembershipId", skip_serializing_if = "Option::is_none")]
    pub owner_membership_id: Option<i64>,
    #[serde(rename = "playerSlotCount", skip_serializing_if = "Option::is_none")]
    pub player_slot_count: Option<i32>,
    #[serde(rename = "alternateSlotCount", skip_serializing_if = "Option::is_none")]
    pub alternate_slot_count: Option<i32>,
    #[serde(rename = "availablePlayerSlotCount", skip_serializing_if = "Option::is_none")]
    pub available_player_slot_count: Option<i32>,
    #[serde(rename = "availableAlternateSlotCount", skip_serializing_if = "Option::is_none")]
    pub available_alternate_slot_count: Option<i32>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    #[serde(rename = "isPublic", skip_serializing_if = "Option::is_none")]
    pub is_public: Option<bool>,
    #[serde(rename = "locale", skip_serializing_if = "Option::is_none")]
    pub locale: Option<String>,
    #[serde(rename = "isValid", skip_serializing_if = "Option::is_none")]
    pub is_valid: Option<bool>,
    #[serde(rename = "datePlayerModified", skip_serializing_if = "Option::is_none")]
    pub date_player_modified: Option<String>,
    #[serde(rename = "titleBeforeModeration", skip_serializing_if = "Option::is_none")]
    pub title_before_moderation: Option<String>,
}

impl FireteamPeriodFireteamSummary {
    pub fn new() -> FireteamPeriodFireteamSummary {
        FireteamPeriodFireteamSummary {
            fireteam_id: None,
            group_id: None,
            platform: None,
            activity_type: None,
            is_immediate: None,
            scheduled_time: None,
            owner_membership_id: None,
            player_slot_count: None,
            alternate_slot_count: None,
            available_player_slot_count: None,
            available_alternate_slot_count: None,
            title: None,
            date_created: None,
            date_modified: None,
            is_public: None,
            locale: None,
            is_valid: None,
            date_player_modified: None,
            title_before_moderation: None,
        }
    }
}


