/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodSeasonsPeriodDestinySeasonDefinition : Defines a canonical \"Season\" of Destiny: a range of a few months where the game highlights certain challenges, provides new loot, has new Clan-related rewards and celebrates various seasonal events.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodSeasonsPeriodDestinySeasonDefinition {
    #[serde(rename = "displayProperties", skip_serializing_if = "Option::is_none")]
    pub display_properties: Option<Box<crate::models::DestinyPeriodDefinitionsPeriodCommonPeriodDestinyDisplayPropertiesDefinition>>,
    #[serde(rename = "backgroundImagePath", skip_serializing_if = "Option::is_none")]
    pub background_image_path: Option<String>,
    #[serde(rename = "seasonNumber", skip_serializing_if = "Option::is_none")]
    pub season_number: Option<i32>,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    #[serde(rename = "seasonPassHash", skip_serializing_if = "Option::is_none")]
    pub season_pass_hash: Option<i32>,
    #[serde(rename = "seasonPassProgressionHash", skip_serializing_if = "Option::is_none")]
    pub season_pass_progression_hash: Option<i32>,
    #[serde(rename = "artifactItemHash", skip_serializing_if = "Option::is_none")]
    pub artifact_item_hash: Option<i32>,
    #[serde(rename = "sealPresentationNodeHash", skip_serializing_if = "Option::is_none")]
    pub seal_presentation_node_hash: Option<i32>,
    #[serde(rename = "seasonalChallengesPresentationNodeHash", skip_serializing_if = "Option::is_none")]
    pub seasonal_challenges_presentation_node_hash: Option<i32>,
    #[serde(rename = "preview", skip_serializing_if = "Option::is_none")]
    pub preview: Option<Box<crate::models::DestinyDefinitionsSeasonsDestinySeasonDefinitionPreview>>,
    /// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<i32>,
    /// The index of the entity as it was found in the investment tables.
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<i32>,
    /// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
    #[serde(rename = "redacted", skip_serializing_if = "Option::is_none")]
    pub redacted: Option<bool>,
}

impl DestinyPeriodDefinitionsPeriodSeasonsPeriodDestinySeasonDefinition {
    /// Defines a canonical \"Season\" of Destiny: a range of a few months where the game highlights certain challenges, provides new loot, has new Clan-related rewards and celebrates various seasonal events.
    pub fn new() -> DestinyPeriodDefinitionsPeriodSeasonsPeriodDestinySeasonDefinition {
        DestinyPeriodDefinitionsPeriodSeasonsPeriodDestinySeasonDefinition {
            display_properties: None,
            background_image_path: None,
            season_number: None,
            start_date: None,
            end_date: None,
            season_pass_hash: None,
            season_pass_progression_hash: None,
            artifact_item_hash: None,
            seal_presentation_node_hash: None,
            seasonal_challenges_presentation_node_hash: None,
            preview: None,
            hash: None,
            index: None,
            redacted: None,
        }
    }
}


