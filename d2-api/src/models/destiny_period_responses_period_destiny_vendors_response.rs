/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodResponsesPeriodDestinyVendorsResponse : A response containing all of the components for all requested vendors.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodResponsesPeriodDestinyVendorsResponse {
    #[serde(rename = "vendorGroups", skip_serializing_if = "Option::is_none")]
    pub vendor_groups: Option<Box<crate::models::DestinyResponsesDestinyVendorsResponseVendorGroups>>,
    #[serde(rename = "vendors", skip_serializing_if = "Option::is_none")]
    pub vendors: Option<Box<crate::models::DestinyResponsesDestinyVendorsResponseVendors>>,
    #[serde(rename = "categories", skip_serializing_if = "Option::is_none")]
    pub categories: Option<Box<crate::models::DestinyResponsesDestinyVendorsResponseCategories>>,
    #[serde(rename = "sales", skip_serializing_if = "Option::is_none")]
    pub sales: Option<Box<crate::models::DestinyResponsesDestinyVendorsResponseSales>>,
    /// The set of item detail components, one set of item components per Vendor. These are keyed by the Vendor Hash, so you will get one Item Component Set per vendor returned.  The components contained inside are themselves keyed by the vendorSaleIndex, and will have whatever item-level components you requested (Sockets, Stats, Instance data etc...) per item being sold by the vendor.
    #[serde(rename = "itemComponents", skip_serializing_if = "Option::is_none")]
    pub item_components: Option<::std::collections::HashMap<String, crate::models::DestinyItemComponentSetOfint32>>,
    #[serde(rename = "currencyLookups", skip_serializing_if = "Option::is_none")]
    pub currency_lookups: Option<Box<crate::models::DestinyResponsesDestinyCharacterResponseCurrencyLookups>>,
    #[serde(rename = "stringVariables", skip_serializing_if = "Option::is_none")]
    pub string_variables: Option<Box<crate::models::DestinyResponsesDestinyVendorsResponseStringVariables>>,
}

impl DestinyPeriodResponsesPeriodDestinyVendorsResponse {
    /// A response containing all of the components for all requested vendors.
    pub fn new() -> DestinyPeriodResponsesPeriodDestinyVendorsResponse {
        DestinyPeriodResponsesPeriodDestinyVendorsResponse {
            vendor_groups: None,
            vendors: None,
            categories: None,
            sales: None,
            item_components: None,
            currency_lookups: None,
            string_variables: None,
        }
    }
}


