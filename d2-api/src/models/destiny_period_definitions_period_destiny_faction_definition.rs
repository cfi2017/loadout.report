/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodDestinyFactionDefinition : These definitions represent Factions in the game. Factions have ended up unilaterally being related to Vendors that represent them, but that need not necessarily be the case.  A Faction is really just an entity that has a related progression for which a character can gain experience. In Destiny 1, Dead Orbit was an example of a Faction: there happens to be a Vendor that represents Dead Orbit (and indeed, DestinyVendorDefinition.factionHash defines to this relationship), but Dead Orbit could theoretically exist without the Vendor that provides rewards.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodDestinyFactionDefinition {
    #[serde(rename = "displayProperties", skip_serializing_if = "Option::is_none")]
    pub display_properties: Option<Box<crate::models::DestinyPeriodDefinitionsPeriodCommonPeriodDestinyDisplayPropertiesDefinition>>,
    /// The hash identifier for the DestinyProgressionDefinition that indicates the character's relationship with this faction in terms of experience and levels.
    #[serde(rename = "progressionHash", skip_serializing_if = "Option::is_none")]
    pub progression_hash: Option<i32>,
    /// The faction token item hashes, and their respective progression values.
    #[serde(rename = "tokenValues", skip_serializing_if = "Option::is_none")]
    pub token_values: Option<::std::collections::HashMap<String, i32>>,
    /// The faction reward item hash, usually an engram.
    #[serde(rename = "rewardItemHash", skip_serializing_if = "Option::is_none")]
    pub reward_item_hash: Option<i32>,
    /// The faction reward vendor hash, used for faction engram previews.
    #[serde(rename = "rewardVendorHash", skip_serializing_if = "Option::is_none")]
    pub reward_vendor_hash: Option<i32>,
    /// List of vendors that are associated with this faction. The last vendor that passes the unlock flag checks is the one that should be shown.
    #[serde(rename = "vendors", skip_serializing_if = "Option::is_none")]
    pub vendors: Option<Vec<crate::models::DestinyPeriodDefinitionsPeriodDestinyFactionVendorDefinition>>,
    /// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<i32>,
    /// The index of the entity as it was found in the investment tables.
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<i32>,
    /// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
    #[serde(rename = "redacted", skip_serializing_if = "Option::is_none")]
    pub redacted: Option<bool>,
}

impl DestinyPeriodDefinitionsPeriodDestinyFactionDefinition {
    /// These definitions represent Factions in the game. Factions have ended up unilaterally being related to Vendors that represent them, but that need not necessarily be the case.  A Faction is really just an entity that has a related progression for which a character can gain experience. In Destiny 1, Dead Orbit was an example of a Faction: there happens to be a Vendor that represents Dead Orbit (and indeed, DestinyVendorDefinition.factionHash defines to this relationship), but Dead Orbit could theoretically exist without the Vendor that provides rewards.
    pub fn new() -> DestinyPeriodDefinitionsPeriodDestinyFactionDefinition {
        DestinyPeriodDefinitionsPeriodDestinyFactionDefinition {
            display_properties: None,
            progression_hash: None,
            token_values: None,
            reward_item_hash: None,
            reward_vendor_hash: None,
            vendors: None,
            hash: None,
            index: None,
            redacted: None,
        }
    }
}


