/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodDestinyProgressionRewardDefinition : Inventory Items can reward progression when actions are performed on them. A common example of this in Destiny 1 was Bounties, which would reward Experience on your Character and the like when you completed the bounty.  Note that this maps to a DestinyProgressionMappingDefinition, and *not* a DestinyProgressionDefinition directly. This is apparently so that multiple progressions can be granted progression points/experience at the same time.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodDestinyProgressionRewardDefinition {
    /// The hash identifier of the DestinyProgressionMappingDefinition that contains the progressions for which experience should be applied.
    #[serde(rename = "progressionMappingHash", skip_serializing_if = "Option::is_none")]
    pub progression_mapping_hash: Option<i32>,
    /// The amount of experience to give to each of the mapped progressions.
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<i32>,
    /// If true, the game's internal mechanisms to throttle progression should be applied.
    #[serde(rename = "applyThrottles", skip_serializing_if = "Option::is_none")]
    pub apply_throttles: Option<bool>,
}

impl DestinyPeriodDefinitionsPeriodDestinyProgressionRewardDefinition {
    /// Inventory Items can reward progression when actions are performed on them. A common example of this in Destiny 1 was Bounties, which would reward Experience on your Character and the like when you completed the bounty.  Note that this maps to a DestinyProgressionMappingDefinition, and *not* a DestinyProgressionDefinition directly. This is apparently so that multiple progressions can be granted progression points/experience at the same time.
    pub fn new() -> DestinyPeriodDefinitionsPeriodDestinyProgressionRewardDefinition {
        DestinyPeriodDefinitionsPeriodDestinyProgressionRewardDefinition {
            progression_mapping_hash: None,
            amount: None,
            apply_throttles: None,
        }
    }
}


