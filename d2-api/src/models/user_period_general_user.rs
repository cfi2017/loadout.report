/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserPeriodGeneralUser {
    #[serde(rename = "membershipId", skip_serializing_if = "Option::is_none")]
    pub membership_id: Option<i64>,
    #[serde(rename = "uniqueName", skip_serializing_if = "Option::is_none")]
    pub unique_name: Option<String>,
    #[serde(rename = "normalizedName", skip_serializing_if = "Option::is_none")]
    pub normalized_name: Option<String>,
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "profilePicture", skip_serializing_if = "Option::is_none")]
    pub profile_picture: Option<i32>,
    #[serde(rename = "profileTheme", skip_serializing_if = "Option::is_none")]
    pub profile_theme: Option<i32>,
    #[serde(rename = "userTitle", skip_serializing_if = "Option::is_none")]
    pub user_title: Option<i32>,
    #[serde(rename = "successMessageFlags", skip_serializing_if = "Option::is_none")]
    pub success_message_flags: Option<i64>,
    #[serde(rename = "isDeleted", skip_serializing_if = "Option::is_none")]
    pub is_deleted: Option<bool>,
    #[serde(rename = "about", skip_serializing_if = "Option::is_none")]
    pub about: Option<String>,
    #[serde(rename = "firstAccess", skip_serializing_if = "Option::is_none")]
    pub first_access: Option<String>,
    #[serde(rename = "lastUpdate", skip_serializing_if = "Option::is_none")]
    pub last_update: Option<String>,
    #[serde(rename = "legacyPortalUID", skip_serializing_if = "Option::is_none")]
    pub legacy_portal_uid: Option<i64>,
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<Box<crate::models::UserPeriodUserToUserContext>>,
    #[serde(rename = "psnDisplayName", skip_serializing_if = "Option::is_none")]
    pub psn_display_name: Option<String>,
    #[serde(rename = "xboxDisplayName", skip_serializing_if = "Option::is_none")]
    pub xbox_display_name: Option<String>,
    #[serde(rename = "fbDisplayName", skip_serializing_if = "Option::is_none")]
    pub fb_display_name: Option<String>,
    #[serde(rename = "showActivity", skip_serializing_if = "Option::is_none")]
    pub show_activity: Option<bool>,
    #[serde(rename = "locale", skip_serializing_if = "Option::is_none")]
    pub locale: Option<String>,
    #[serde(rename = "localeInheritDefault", skip_serializing_if = "Option::is_none")]
    pub locale_inherit_default: Option<bool>,
    #[serde(rename = "lastBanReportId", skip_serializing_if = "Option::is_none")]
    pub last_ban_report_id: Option<i64>,
    #[serde(rename = "showGroupMessaging", skip_serializing_if = "Option::is_none")]
    pub show_group_messaging: Option<bool>,
    #[serde(rename = "profilePicturePath", skip_serializing_if = "Option::is_none")]
    pub profile_picture_path: Option<String>,
    #[serde(rename = "profilePictureWidePath", skip_serializing_if = "Option::is_none")]
    pub profile_picture_wide_path: Option<String>,
    #[serde(rename = "profileThemeName", skip_serializing_if = "Option::is_none")]
    pub profile_theme_name: Option<String>,
    #[serde(rename = "userTitleDisplay", skip_serializing_if = "Option::is_none")]
    pub user_title_display: Option<String>,
    #[serde(rename = "statusText", skip_serializing_if = "Option::is_none")]
    pub status_text: Option<String>,
    #[serde(rename = "statusDate", skip_serializing_if = "Option::is_none")]
    pub status_date: Option<String>,
    #[serde(rename = "profileBanExpire", skip_serializing_if = "Option::is_none")]
    pub profile_ban_expire: Option<String>,
    #[serde(rename = "blizzardDisplayName", skip_serializing_if = "Option::is_none")]
    pub blizzard_display_name: Option<String>,
    #[serde(rename = "steamDisplayName", skip_serializing_if = "Option::is_none")]
    pub steam_display_name: Option<String>,
    #[serde(rename = "stadiaDisplayName", skip_serializing_if = "Option::is_none")]
    pub stadia_display_name: Option<String>,
    #[serde(rename = "twitchDisplayName", skip_serializing_if = "Option::is_none")]
    pub twitch_display_name: Option<String>,
    #[serde(rename = "cachedBungieGlobalDisplayName", skip_serializing_if = "Option::is_none")]
    pub cached_bungie_global_display_name: Option<String>,
    #[serde(rename = "cachedBungieGlobalDisplayNameCode", skip_serializing_if = "Option::is_none")]
    pub cached_bungie_global_display_name_code: Option<i32>,
    #[serde(rename = "egsDisplayName", skip_serializing_if = "Option::is_none")]
    pub egs_display_name: Option<String>,
}

impl UserPeriodGeneralUser {
    pub fn new() -> UserPeriodGeneralUser {
        UserPeriodGeneralUser {
            membership_id: None,
            unique_name: None,
            normalized_name: None,
            display_name: None,
            profile_picture: None,
            profile_theme: None,
            user_title: None,
            success_message_flags: None,
            is_deleted: None,
            about: None,
            first_access: None,
            last_update: None,
            legacy_portal_uid: None,
            context: None,
            psn_display_name: None,
            xbox_display_name: None,
            fb_display_name: None,
            show_activity: None,
            locale: None,
            locale_inherit_default: None,
            last_ban_report_id: None,
            show_group_messaging: None,
            profile_picture_path: None,
            profile_picture_wide_path: None,
            profile_theme_name: None,
            user_title_display: None,
            status_text: None,
            status_date: None,
            profile_ban_expire: None,
            blizzard_display_name: None,
            steam_display_name: None,
            stadia_display_name: None,
            twitch_display_name: None,
            cached_bungie_global_display_name: None,
            cached_bungie_global_display_name_code: None,
            egs_display_name: None,
        }
    }
}


