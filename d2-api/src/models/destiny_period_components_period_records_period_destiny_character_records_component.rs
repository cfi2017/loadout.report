/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodComponentsPeriodRecordsPeriodDestinyCharacterRecordsComponent {
    #[serde(rename = "featuredRecordHashes", skip_serializing_if = "Option::is_none")]
    pub featured_record_hashes: Option<Vec<i32>>,
    #[serde(rename = "records", skip_serializing_if = "Option::is_none")]
    pub records: Option<::std::collections::HashMap<String, crate::models::DestinyPeriodComponentsPeriodRecordsPeriodDestinyRecordComponent>>,
    /// The hash for the root presentation node definition of Triumph categories.
    #[serde(rename = "recordCategoriesRootNodeHash", skip_serializing_if = "Option::is_none")]
    pub record_categories_root_node_hash: Option<i32>,
    /// The hash for the root presentation node definition of Triumph Seals.
    #[serde(rename = "recordSealsRootNodeHash", skip_serializing_if = "Option::is_none")]
    pub record_seals_root_node_hash: Option<i32>,
}

impl DestinyPeriodComponentsPeriodRecordsPeriodDestinyCharacterRecordsComponent {
    pub fn new() -> DestinyPeriodComponentsPeriodRecordsPeriodDestinyCharacterRecordsComponent {
        DestinyPeriodComponentsPeriodRecordsPeriodDestinyCharacterRecordsComponent {
            featured_record_hashes: None,
            records: None,
            record_categories_root_node_hash: None,
            record_seals_root_node_hash: None,
        }
    }
}


