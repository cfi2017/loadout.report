/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodComponentsPeriodPlugSetsPeriodDestinyPlugSetsComponent : Sockets may refer to a \"Plug Set\": a set of reusable plugs that may be shared across multiple sockets (or even, in theory, multiple sockets over multiple items).  This is the set of those plugs that we came across in the users' inventory, along with the values for plugs in the set. Any given set in this component may be represented in Character and Profile-level, as some plugs may be Profile-level restricted, and some character-level restricted. (note that the ones that are even more specific will remain on the actual socket component itself, as they cannot be reused)



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodComponentsPeriodPlugSetsPeriodDestinyPlugSetsComponent {
    /// The shared list of plugs for each relevant PlugSet, keyed by the hash identifier of the PlugSet (DestinyPlugSetDefinition).
    #[serde(rename = "plugs", skip_serializing_if = "Option::is_none")]
    pub plugs: Option<::std::collections::HashMap<String, Vec<crate::models::DestinyPeriodSocketsPeriodDestinyItemPlug>>>,
}

impl DestinyPeriodComponentsPeriodPlugSetsPeriodDestinyPlugSetsComponent {
    /// Sockets may refer to a \"Plug Set\": a set of reusable plugs that may be shared across multiple sockets (or even, in theory, multiple sockets over multiple items).  This is the set of those plugs that we came across in the users' inventory, along with the values for plugs in the set. Any given set in this component may be represented in Character and Profile-level, as some plugs may be Profile-level restricted, and some character-level restricted. (note that the ones that are even more specific will remain on the actual socket component itself, as they cannot be reused)
    pub fn new() -> DestinyPeriodComponentsPeriodPlugSetsPeriodDestinyPlugSetsComponent {
        DestinyPeriodComponentsPeriodPlugSetsPeriodDestinyPlugSetsComponent {
            plugs: None,
        }
    }
}


