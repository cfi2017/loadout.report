/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneQuestDefinition : Any data we need to figure out whether this Quest Item is the currently active one for the conceptual Milestone. Even just typing this description, I already regret it.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneQuestDefinition {
    /// The item representing this Milestone quest. Use this hash to look up the DestinyInventoryItemDefinition for the quest to find its steps and human readable data.
    #[serde(rename = "questItemHash", skip_serializing_if = "Option::is_none")]
    pub quest_item_hash: Option<i32>,
    #[serde(rename = "displayProperties", skip_serializing_if = "Option::is_none")]
    pub display_properties: Option<Box<crate::models::DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinitionDisplayProperties>>,
    /// If populated, this image can be shown instead of the generic milestone's image when this quest is live, or it can be used to show a background image for the quest itself that differs from that of the Activity or the Milestone.
    #[serde(rename = "overrideImage", skip_serializing_if = "Option::is_none")]
    pub override_image: Option<String>,
    #[serde(rename = "questRewards", skip_serializing_if = "Option::is_none")]
    pub quest_rewards: Option<Box<crate::models::DestinyDefinitionsMilestonesDestinyMilestoneQuestDefinitionQuestRewards>>,
    /// The full set of all possible \"conceptual activities\" that are related to this Milestone. Tiers or alternative modes of play within these conceptual activities will be defined as sub-entities. Keyed by the Conceptual Activity Hash. Use the key to look up DestinyActivityDefinition.
    #[serde(rename = "activities", skip_serializing_if = "Option::is_none")]
    pub activities: Option<::std::collections::HashMap<String, crate::models::DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneActivityDefinition>>,
    /// Sometimes, a Milestone's quest is related to an entire Destination rather than a specific activity. In that situation, this will be the hash of that Destination. Hotspots are currently the only Milestones that expose this data, but that does not preclude this data from being returned for other Milestones in the future.
    #[serde(rename = "destinationHash", skip_serializing_if = "Option::is_none")]
    pub destination_hash: Option<i32>,
}

impl DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneQuestDefinition {
    /// Any data we need to figure out whether this Quest Item is the currently active one for the conceptual Milestone. Even just typing this description, I already regret it.
    pub fn new() -> DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneQuestDefinition {
        DestinyPeriodDefinitionsPeriodMilestonesPeriodDestinyMilestoneQuestDefinition {
            quest_item_hash: None,
            display_properties: None,
            override_image: None,
            quest_rewards: None,
            activities: None,
            destination_hash: None,
        }
    }
}


