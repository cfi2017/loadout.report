/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodActivitiesPeriodDestinyPublicActivityStatus : Represents the public-facing status of an activity: any data about what is currently active in the Activity, regardless of an individual character's progress in it.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodActivitiesPeriodDestinyPublicActivityStatus {
    /// Active Challenges for the activity, if any - represented as hashes for DestinyObjectiveDefinitions.
    #[serde(rename = "challengeObjectiveHashes", skip_serializing_if = "Option::is_none")]
    pub challenge_objective_hashes: Option<Vec<i32>>,
    /// The active modifiers on this activity, if any - represented as hashes for DestinyActivityModifierDefinitions.
    #[serde(rename = "modifierHashes", skip_serializing_if = "Option::is_none")]
    pub modifier_hashes: Option<Vec<i32>>,
    /// If the activity itself provides any specific \"mock\" rewards, this will be the items and their quantity.  Why \"mock\", you ask? Because these are the rewards as they are represented in the tooltip of the Activity.  These are often pointers to fake items that look good in a tooltip, but represent an abstract concept of what you will get for a reward rather than the specific items you may obtain.
    #[serde(rename = "rewardTooltipItems", skip_serializing_if = "Option::is_none")]
    pub reward_tooltip_items: Option<Vec<crate::models::DestinyPeriodDestinyItemQuantity>>,
}

impl DestinyPeriodActivitiesPeriodDestinyPublicActivityStatus {
    /// Represents the public-facing status of an activity: any data about what is currently active in the Activity, regardless of an individual character's progress in it.
    pub fn new() -> DestinyPeriodActivitiesPeriodDestinyPublicActivityStatus {
        DestinyPeriodActivitiesPeriodDestinyPublicActivityStatus {
            challenge_objective_hashes: None,
            modifier_hashes: None,
            reward_tooltip_items: None,
        }
    }
}


