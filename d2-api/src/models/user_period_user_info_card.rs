/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// UserPeriodUserInfoCard : This contract supplies basic information commonly used to display a minimal amount of information about a user. Take care to not add more properties here unless the property applies in all (or at least the majority) of the situations where UserInfoCard is used. Avoid adding game specific or platform specific details here. In cases where UserInfoCard is a subset of the data needed in a contract, use UserInfoCard as a property of other contracts.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserPeriodUserInfoCard {
    /// A platform specific additional display name - ex: psn Real Name, bnet Unique Name, etc.
    #[serde(rename = "supplementalDisplayName", skip_serializing_if = "Option::is_none")]
    pub supplemental_display_name: Option<String>,
    /// URL the Icon if available.
    #[serde(rename = "iconPath", skip_serializing_if = "Option::is_none")]
    pub icon_path: Option<String>,
    /// If there is a cross save override in effect, this value will tell you the type that is overridding this one.
    #[serde(rename = "crossSaveOverride", skip_serializing_if = "Option::is_none")]
    pub cross_save_override: Option<i32>,
    /// The list of Membership Types indicating the platforms on which this Membership can be used.   Not in Cross Save = its original membership type. Cross Save Primary = Any membership types it is overridding, and its original membership type Cross Save Overridden = Empty list
    #[serde(rename = "applicableMembershipTypes", skip_serializing_if = "Option::is_none")]
    pub applicable_membership_types: Option<Vec<i32>>,
    /// If True, this is a public user membership.
    #[serde(rename = "isPublic", skip_serializing_if = "Option::is_none")]
    pub is_public: Option<bool>,
    /// Type of the membership. Not necessarily the native type.
    #[serde(rename = "membershipType", skip_serializing_if = "Option::is_none")]
    pub membership_type: Option<i32>,
    /// Membership ID as they user is known in the Accounts service
    #[serde(rename = "membershipId", skip_serializing_if = "Option::is_none")]
    pub membership_id: Option<i64>,
    /// Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// The bungie global display name, if set.
    #[serde(rename = "bungieGlobalDisplayName", skip_serializing_if = "Option::is_none")]
    pub bungie_global_display_name: Option<String>,
    /// The bungie global display name code, if set.
    #[serde(rename = "bungieGlobalDisplayNameCode", skip_serializing_if = "Option::is_none")]
    pub bungie_global_display_name_code: Option<i32>,
}

impl UserPeriodUserInfoCard {
    /// This contract supplies basic information commonly used to display a minimal amount of information about a user. Take care to not add more properties here unless the property applies in all (or at least the majority) of the situations where UserInfoCard is used. Avoid adding game specific or platform specific details here. In cases where UserInfoCard is a subset of the data needed in a contract, use UserInfoCard as a property of other contracts.
    pub fn new() -> UserPeriodUserInfoCard {
        UserPeriodUserInfoCard {
            supplemental_display_name: None,
            icon_path: None,
            cross_save_override: None,
            applicable_membership_types: None,
            is_public: None,
            membership_type: None,
            membership_id: None,
            display_name: None,
            bungie_global_display_name: None,
            bungie_global_display_name_code: None,
        }
    }
}


