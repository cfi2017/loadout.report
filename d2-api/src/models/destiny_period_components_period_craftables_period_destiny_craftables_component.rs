/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodComponentsPeriodCraftablesPeriodDestinyCraftablesComponent {
    /// A map of craftable item hashes to craftable item state components.
    #[serde(rename = "craftables", skip_serializing_if = "Option::is_none")]
    pub craftables: Option<::std::collections::HashMap<String, crate::models::DestinyPeriodComponentsPeriodCraftablesPeriodDestinyCraftableComponent>>,
    /// The hash for the root presentation node definition of craftable item categories.
    #[serde(rename = "craftingRootNodeHash", skip_serializing_if = "Option::is_none")]
    pub crafting_root_node_hash: Option<i32>,
}

impl DestinyPeriodComponentsPeriodCraftablesPeriodDestinyCraftablesComponent {
    pub fn new() -> DestinyPeriodComponentsPeriodCraftablesPeriodDestinyCraftablesComponent {
        DestinyPeriodComponentsPeriodCraftablesPeriodDestinyCraftablesComponent {
            craftables: None,
            crafting_root_node_hash: None,
        }
    }
}


