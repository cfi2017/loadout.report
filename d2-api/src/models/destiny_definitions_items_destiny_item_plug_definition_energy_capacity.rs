/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyDefinitionsItemsDestinyItemPlugDefinitionEnergyCapacity : IF not null, this plug provides Energy capacity to the item in which it is socketed. In Armor 2.0 for example, is implemented in a similar way to Masterworks, where visually it's a single area of the UI being clicked on to \"Upgrade\" to higher energy levels, but it's actually socketing new plugs.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyDefinitionsItemsDestinyItemPlugDefinitionEnergyCapacity {
    /// How much energy capacity this plug provides.
    #[serde(rename = "capacityValue", skip_serializing_if = "Option::is_none")]
    pub capacity_value: Option<i32>,
    /// Energy provided by a plug is always of a specific type - this is the hash identifier for the energy type for which it provides Capacity.
    #[serde(rename = "energyTypeHash", skip_serializing_if = "Option::is_none")]
    pub energy_type_hash: Option<i32>,
    /// The Energy Type for this energy capacity, in enum form for easy use.
    #[serde(rename = "energyType", skip_serializing_if = "Option::is_none")]
    pub energy_type: Option<i32>,
}

impl DestinyDefinitionsItemsDestinyItemPlugDefinitionEnergyCapacity {
    /// IF not null, this plug provides Energy capacity to the item in which it is socketed. In Armor 2.0 for example, is implemented in a similar way to Masterworks, where visually it's a single area of the UI being clicked on to \"Upgrade\" to higher energy levels, but it's actually socketing new plugs.
    pub fn new() -> DestinyDefinitionsItemsDestinyItemPlugDefinitionEnergyCapacity {
        DestinyDefinitionsItemsDestinyItemPlugDefinitionEnergyCapacity {
            capacity_value: None,
            energy_type_hash: None,
            energy_type: None,
        }
    }
}


