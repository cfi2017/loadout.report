/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodItemsPeriodDestinyPlugRuleDefinition : Dictates a rule around whether the plug is enabled or insertable.  In practice, the live Destiny data will refer to these entries by index. You can then look up that index in the appropriate property (enabledRules or insertionRules) to get the localized string for the failure message if it failed.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodItemsPeriodDestinyPlugRuleDefinition {
    /// The localized string to show if this rule fails.
    #[serde(rename = "failureMessage", skip_serializing_if = "Option::is_none")]
    pub failure_message: Option<String>,
}

impl DestinyPeriodDefinitionsPeriodItemsPeriodDestinyPlugRuleDefinition {
    /// Dictates a rule around whether the plug is enabled or insertable.  In practice, the live Destiny data will refer to these entries by index. You can then look up that index in the appropriate property (enabledRules or insertionRules) to get the localized string for the failure message if it failed.
    pub fn new() -> DestinyPeriodDefinitionsPeriodItemsPeriodDestinyPlugRuleDefinition {
        DestinyPeriodDefinitionsPeriodItemsPeriodDestinyPlugRuleDefinition {
            failure_message: None,
        }
    }
}


