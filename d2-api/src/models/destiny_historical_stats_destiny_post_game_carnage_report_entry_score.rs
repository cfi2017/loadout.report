/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyHistoricalStatsDestinyPostGameCarnageReportEntryScore : Score of the player if available



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyHistoricalStatsDestinyPostGameCarnageReportEntryScore {
    /// Unique ID for this stat
    #[serde(rename = "statId", skip_serializing_if = "Option::is_none")]
    pub stat_id: Option<String>,
    #[serde(rename = "basic", skip_serializing_if = "Option::is_none")]
    pub basic: Option<Box<crate::models::DestinyHistoricalStatsDestinyHistoricalStatsValueBasic>>,
    #[serde(rename = "pga", skip_serializing_if = "Option::is_none")]
    pub pga: Option<Box<crate::models::DestinyHistoricalStatsDestinyHistoricalStatsValuePga>>,
    #[serde(rename = "weighted", skip_serializing_if = "Option::is_none")]
    pub weighted: Option<Box<crate::models::DestinyHistoricalStatsDestinyHistoricalStatsValueWeighted>>,
    /// When a stat represents the best, most, longest, fastest or some other personal best, the actual activity ID where that personal best was established is available on this property.
    #[serde(rename = "activityId", skip_serializing_if = "Option::is_none")]
    pub activity_id: Option<i64>,
}

impl DestinyHistoricalStatsDestinyPostGameCarnageReportEntryScore {
    /// Score of the player if available
    pub fn new() -> DestinyHistoricalStatsDestinyPostGameCarnageReportEntryScore {
        DestinyHistoricalStatsDestinyPostGameCarnageReportEntryScore {
            stat_id: None,
            basic: None,
            pga: None,
            weighted: None,
            activity_id: None,
        }
    }
}


