/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodDestinyTalentExclusiveGroup : As of Destiny 2, nodes can exist as part of \"Exclusive Groups\". These differ from exclusive sets in that, within the group, many nodes can be activated. But the act of activating any node in the group will cause \"opposing\" nodes (nodes in groups that are not allowed to be activated at the same time as this group) to deactivate.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodDestinyTalentExclusiveGroup {
    /// The identifier for this exclusive group. Only guaranteed unique within the talent grid, not globally.
    #[serde(rename = "groupHash", skip_serializing_if = "Option::is_none")]
    pub group_hash: Option<i32>,
    /// If this group has an associated piece of lore to show next to it, this will be the identifier for that DestinyLoreDefinition.
    #[serde(rename = "loreHash", skip_serializing_if = "Option::is_none")]
    pub lore_hash: Option<i32>,
    /// A quick reference of the talent nodes that are part of this group, by their Talent Node hashes. (See DestinyTalentNodeDefinition.nodeHash)
    #[serde(rename = "nodeHashes", skip_serializing_if = "Option::is_none")]
    pub node_hashes: Option<Vec<i32>>,
    /// A quick reference of Groups whose nodes will be deactivated if any node in this group is activated.
    #[serde(rename = "opposingGroupHashes", skip_serializing_if = "Option::is_none")]
    pub opposing_group_hashes: Option<Vec<i32>>,
    /// A quick reference of Nodes that will be deactivated if any node in this group is activated, by their Talent Node hashes. (See DestinyTalentNodeDefinition.nodeHash)
    #[serde(rename = "opposingNodeHashes", skip_serializing_if = "Option::is_none")]
    pub opposing_node_hashes: Option<Vec<i32>>,
}

impl DestinyPeriodDefinitionsPeriodDestinyTalentExclusiveGroup {
    /// As of Destiny 2, nodes can exist as part of \"Exclusive Groups\". These differ from exclusive sets in that, within the group, many nodes can be activated. But the act of activating any node in the group will cause \"opposing\" nodes (nodes in groups that are not allowed to be activated at the same time as this group) to deactivate.
    pub fn new() -> DestinyPeriodDefinitionsPeriodDestinyTalentExclusiveGroup {
        DestinyPeriodDefinitionsPeriodDestinyTalentExclusiveGroup {
            group_hash: None,
            lore_hash: None,
            node_hashes: None,
            opposing_group_hashes: None,
            opposing_node_hashes: None,
        }
    }
}


