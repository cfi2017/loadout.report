/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodHistoricalStatsPeriodDestinyPostGameCarnageReportEntry {
    /// Standing of the player
    #[serde(rename = "standing", skip_serializing_if = "Option::is_none")]
    pub standing: Option<i32>,
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<Box<crate::models::DestinyHistoricalStatsDestinyPostGameCarnageReportEntryScore>>,
    #[serde(rename = "player", skip_serializing_if = "Option::is_none")]
    pub player: Option<Box<crate::models::DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer>>,
    /// ID of the player's character used in the activity.
    #[serde(rename = "characterId", skip_serializing_if = "Option::is_none")]
    pub character_id: Option<i64>,
    /// Collection of stats for the player in this activity.
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<::std::collections::HashMap<String, crate::models::DestinyPeriodHistoricalStatsPeriodDestinyHistoricalStatsValue>>,
    #[serde(rename = "extended", skip_serializing_if = "Option::is_none")]
    pub extended: Option<Box<crate::models::DestinyHistoricalStatsDestinyPostGameCarnageReportEntryExtended>>,
}

impl DestinyPeriodHistoricalStatsPeriodDestinyPostGameCarnageReportEntry {
    pub fn new() -> DestinyPeriodHistoricalStatsPeriodDestinyPostGameCarnageReportEntry {
        DestinyPeriodHistoricalStatsPeriodDestinyPostGameCarnageReportEntry {
            standing: None,
            score: None,
            player: None,
            character_id: None,
            values: None,
            extended: None,
        }
    }
}


