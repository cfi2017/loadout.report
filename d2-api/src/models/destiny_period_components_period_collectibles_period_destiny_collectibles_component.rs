/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodComponentsPeriodCollectiblesPeriodDestinyCollectiblesComponent {
    #[serde(rename = "collectibles", skip_serializing_if = "Option::is_none")]
    pub collectibles: Option<::std::collections::HashMap<String, crate::models::DestinyPeriodComponentsPeriodCollectiblesPeriodDestinyCollectibleComponent>>,
    /// The hash for the root presentation node definition of Collection categories.
    #[serde(rename = "collectionCategoriesRootNodeHash", skip_serializing_if = "Option::is_none")]
    pub collection_categories_root_node_hash: Option<i32>,
    /// The hash for the root presentation node definition of Collection Badges.
    #[serde(rename = "collectionBadgesRootNodeHash", skip_serializing_if = "Option::is_none")]
    pub collection_badges_root_node_hash: Option<i32>,
}

impl DestinyPeriodComponentsPeriodCollectiblesPeriodDestinyCollectiblesComponent {
    pub fn new() -> DestinyPeriodComponentsPeriodCollectiblesPeriodDestinyCollectiblesComponent {
        DestinyPeriodComponentsPeriodCollectiblesPeriodDestinyCollectiblesComponent {
            collectibles: None,
            collection_categories_root_node_hash: None,
            collection_badges_root_node_hash: None,
        }
    }
}


