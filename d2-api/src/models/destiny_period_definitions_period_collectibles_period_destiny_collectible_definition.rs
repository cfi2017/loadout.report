/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */

/// DestinyPeriodDefinitionsPeriodCollectiblesPeriodDestinyCollectibleDefinition : Defines a



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodDefinitionsPeriodCollectiblesPeriodDestinyCollectibleDefinition {
    #[serde(rename = "displayProperties", skip_serializing_if = "Option::is_none")]
    pub display_properties: Option<Box<crate::models::DestinyPeriodDefinitionsPeriodCommonPeriodDestinyDisplayPropertiesDefinition>>,
    /// Indicates whether the state of this Collectible is determined on a per-character or on an account-wide basis.
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<i32>,
    /// A human readable string for a hint about how to acquire the item.
    #[serde(rename = "sourceString", skip_serializing_if = "Option::is_none")]
    pub source_string: Option<String>,
    /// This is a hash identifier we are building on the BNet side in an attempt to let people group collectibles by similar sources.  I can't promise that it's going to be 100% accurate, but if the designers were consistent in assigning the same source strings to items with the same sources, it *ought to* be. No promises though.  This hash also doesn't relate to an actual definition, just to note: we've got nothing useful other than the source string for this data.
    #[serde(rename = "sourceHash", skip_serializing_if = "Option::is_none")]
    pub source_hash: Option<i32>,
    #[serde(rename = "itemHash", skip_serializing_if = "Option::is_none")]
    pub item_hash: Option<i32>,
    #[serde(rename = "acquisitionInfo", skip_serializing_if = "Option::is_none")]
    pub acquisition_info: Option<Box<crate::models::DestinyPeriodDefinitionsPeriodCollectiblesPeriodDestinyCollectibleAcquisitionBlock>>,
    #[serde(rename = "stateInfo", skip_serializing_if = "Option::is_none")]
    pub state_info: Option<Box<crate::models::DestinyPeriodDefinitionsPeriodCollectiblesPeriodDestinyCollectibleStateBlock>>,
    #[serde(rename = "presentationInfo", skip_serializing_if = "Option::is_none")]
    pub presentation_info: Option<Box<crate::models::DestinyPeriodDefinitionsPeriodPresentationPeriodDestinyPresentationChildBlock>>,
    #[serde(rename = "presentationNodeType", skip_serializing_if = "Option::is_none")]
    pub presentation_node_type: Option<i32>,
    #[serde(rename = "traitIds", skip_serializing_if = "Option::is_none")]
    pub trait_ids: Option<Vec<String>>,
    #[serde(rename = "traitHashes", skip_serializing_if = "Option::is_none")]
    pub trait_hashes: Option<Vec<i32>>,
    /// A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.
    #[serde(rename = "parentNodeHashes", skip_serializing_if = "Option::is_none")]
    pub parent_node_hashes: Option<Vec<i32>>,
    /// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.  When entities refer to each other in Destiny content, it is this hash that they are referring to.
    #[serde(rename = "hash", skip_serializing_if = "Option::is_none")]
    pub hash: Option<i32>,
    /// The index of the entity as it was found in the investment tables.
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<i32>,
    /// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
    #[serde(rename = "redacted", skip_serializing_if = "Option::is_none")]
    pub redacted: Option<bool>,
}

impl DestinyPeriodDefinitionsPeriodCollectiblesPeriodDestinyCollectibleDefinition {
    /// Defines a
    pub fn new() -> DestinyPeriodDefinitionsPeriodCollectiblesPeriodDestinyCollectibleDefinition {
        DestinyPeriodDefinitionsPeriodCollectiblesPeriodDestinyCollectibleDefinition {
            display_properties: None,
            scope: None,
            source_string: None,
            source_hash: None,
            item_hash: None,
            acquisition_info: None,
            state_info: None,
            presentation_info: None,
            presentation_node_type: None,
            trait_ids: None,
            trait_hashes: None,
            parent_node_hashes: None,
            hash: None,
            index: None,
            redacted: None,
        }
    }
}


