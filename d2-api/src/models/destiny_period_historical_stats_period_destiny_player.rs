/*
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.16.0
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DestinyPeriodHistoricalStatsPeriodDestinyPlayer {
    #[serde(rename = "destinyUserInfo", skip_serializing_if = "Option::is_none")]
    pub destiny_user_info: Option<Box<crate::models::DestinyHistoricalStatsDestinyPlayerDestinyUserInfo>>,
    /// Class of the character if applicable and available.
    #[serde(rename = "characterClass", skip_serializing_if = "Option::is_none")]
    pub character_class: Option<String>,
    #[serde(rename = "classHash", skip_serializing_if = "Option::is_none")]
    pub class_hash: Option<i32>,
    #[serde(rename = "raceHash", skip_serializing_if = "Option::is_none")]
    pub race_hash: Option<i32>,
    #[serde(rename = "genderHash", skip_serializing_if = "Option::is_none")]
    pub gender_hash: Option<i32>,
    /// Level of the character if available. Zero if it is not available.
    #[serde(rename = "characterLevel", skip_serializing_if = "Option::is_none")]
    pub character_level: Option<i32>,
    /// Light Level of the character if available. Zero if it is not available.
    #[serde(rename = "lightLevel", skip_serializing_if = "Option::is_none")]
    pub light_level: Option<i32>,
    #[serde(rename = "bungieNetUserInfo", skip_serializing_if = "Option::is_none")]
    pub bungie_net_user_info: Option<Box<crate::models::DestinyHistoricalStatsDestinyPlayerBungieNetUserInfo>>,
    /// Current clan name for the player. This value may be null or an empty string if the user does not have a clan.
    #[serde(rename = "clanName", skip_serializing_if = "Option::is_none")]
    pub clan_name: Option<String>,
    /// Current clan tag for the player. This value may be null or an empty string if the user does not have a clan.
    #[serde(rename = "clanTag", skip_serializing_if = "Option::is_none")]
    pub clan_tag: Option<String>,
    /// If we know the emblem's hash, this can be used to look up the player's emblem at the time of a match when receiving PGCR data, or otherwise their currently equipped emblem (if we are able to obtain it).
    #[serde(rename = "emblemHash", skip_serializing_if = "Option::is_none")]
    pub emblem_hash: Option<i32>,
}

impl DestinyPeriodHistoricalStatsPeriodDestinyPlayer {
    pub fn new() -> DestinyPeriodHistoricalStatsPeriodDestinyPlayer {
        DestinyPeriodHistoricalStatsPeriodDestinyPlayer {
            destiny_user_info: None,
            character_class: None,
            class_hash: None,
            race_hash: None,
            gender_hash: None,
            character_level: None,
            light_level: None,
            bungie_net_user_info: None,
            clan_name: None,
            clan_tag: None,
            emblem_hash: None,
        }
    }
}


